[1mdiff --git a/app/run.py b/app/run.py[m
[1mindex 0b8c966..29ede75 100644[m
[1m--- a/app/run.py[m
[1m+++ b/app/run.py[m
[36m@@ -20,7 +20,7 @@[m [mclass MyTokenAuth(TokenAuth):[m
         try:[m
             token = base64.b64decode(token)[m
             payload = jwt.decode(token, Application.app.config['TOKEN_SECRET'])[m
[31m-            user = Application.app.data.driver.db.users.find_one({"_id":ObjectId(payload['sub'])})[m
[32m+[m[32m            user =Application.app.data.driver.db.users.find_one({"_id":ObjectId(payload['sub'])})[m
             g.user_id = ObjectId(payload['sub'])[m
             return user [m
         except DecodeError:[m
[36m@@ -53,7 +53,7 @@[m [mclass User:[m
         if self.facebook_id:[m
             if Application.app.data.driver.db.users.find_one({"privateInfo.facebook_id":self.facebook_id}) is None:[m
                 #self._id= str(Application.app.data.driver.db.users.insert({"privateInfo" : {"facebook_id":self.facebook_id}}).inserted_id)[m
[31m-                self._id= Application.app.data.driver.db.users.insert({"privateInfo" : {"facebook_id":self.facebook_id}})[m
[32m+[m[32m                self._id= Application.app.data.driver.db.users.insert({"privateInfo" : {"facebook_id":self.facebook_id}}).inserted_id[m
             #else: self._id = str(Application.app.data.driver.db.users.find_one({"privateInfo.facebook_id":self.facebook_id})["_id"])[m
             else: self._id = Application.app.data.driver.db.users.find_one({"privateInfo.facebook_id":self.facebook_id})["_id"][m
         [m
[36m@@ -138,10 +138,7 @@[m [mdef auth_facebook():[m
     userInfo["last_name"]=profile["last_name"][m
     userInfo["gender"]=profile["gender"][m
     user.updateUser(userInfo)[m
[31m-    if profile.get("email", None) == None: #if email doesn't exist (in case, the user didn't validate his mail with fb), we doesn't add it to the database[m
[31m-        userInfo = {"privateInfo.link" : profile["link"] }[m
[31m-    else:[m
[31m-        userInfo = {"privateInfo.email" : profile["email"],"privateInfo.link" : profile["link"] }[m
[32m+[m[32m    userInfo = {"privateInfo.email" : profile["email"],"privateInfo.link" : profile["link"] }[m
     user.updateUser(userInfo)[m
     return jsonify(token=user.token())[m
 [m
